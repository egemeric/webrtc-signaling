from aiohttp import web
import socketio
import ssl
ROOM = ''

sio = socketio.AsyncServer(cors_allowed_origins='*', ping_timeout=35)
app = web.Application()
app.add_routes([web.static('/static', 'static', show_index=True)])
sio.attach(app)

async def index(request):
    global ROOM
    ROOM = request.rel_url.query.get('roomid')
    print("get:",ROOM)
    return web.FileResponse('./index.html')

@sio.event()
async def connect(sid, environ):

    print('Connected', sid)
    await sio.emit('ready', room=ROOM, skip_sid=sid)
    sio.enter_room(sid, ROOM)



@sio.event
def disconnect(sid):
    sio.leave_room(sid, ROOM)
    print('Disconnected', sid)


@sio.event
async def data(sid, data):
    print('Message from {}: {}'.format(sid, data))
    await sio.emit('data', data, room=ROOM, skip_sid=sid)


if __name__ == '__main__':
    app.router.add_route('GET', '/', index)
    ssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)
    ssl_context.check_hostname = False
    ssl_context.load_cert_chain('cert/sslcert.crt', 'cert/sslcert.key')
    web.run_app(app, ssl_context=ssl_context, port=9999)
